{"version":3,"sources":["assets/icons/sprite_categories.svg","client/brief/Brief.module.scss","client/basicField/BasicField.module.scss","pages/homePage/HomePage.module.scss","client/brief/Brief.js","shared/hooks/mediaRulesHook.js","client/basicField/BasicField.js","pages/homePage/HomePage.js"],"names":["module","exports","Brief","dispatch","useDispatch","transType","useParams","date","Date","useState","monthsTotal","setMonthes","stateYear","useSelector","getYear","filter","type","year","transactions","getBrief","useEffect","length","operation","fetchBrief","monthCuantity","getFullYear","getMonth","monthesSum","Array","fill","map","_","idx","currentMonth","currentAmount","reduce","acc","amount","split","forEach","data","setMonth","toLocaleDateString","month","formatter","Intl","NumberFormat","minimumFractionDigits","format","className","styles","container","titleBlock","titleCont","btnBlock","btn","onClick","action","changeActualYearForBrief","width","height","xlinkHref","sprite","monthPoint","monthPointText","list","useMediaQuery","query","matches","setMatches","media","window","matchMedia","listener","addListener","removeListener","BasicField","isPageWideLaptop","isPageWideMobile","isPageWideTablet","refreshDate","setSelectedDate","toISOString","slice","reverse","join","getSelectedDate","transactionsOperations","getAllIncomeOfDate","getAllExpenseOfDate","btnWrapper","BasicFieldTab","text","link","dataField","enterFormWrapper","Calendar","EnterForm","dataWrapper","TableTransactions","HomePage","location","useLocation","setCurrentLocation","inputForm","Balance"],"mappings":"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","file":"static/js/9.4ad2add8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sprite_categories.30cc13cf.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Brief_container__2P9QR\",\"titleBlock\":\"Brief_titleBlock__1m7NA\",\"titleCont\":\"Brief_titleCont__3VArM\",\"btnBlock\":\"Brief_btnBlock__2ntyQ\",\"btn\":\"Brief_btn__2NYvj\",\"list\":\"Brief_list__jk26_\",\"monthPoint\":\"Brief_monthPoint__12_fj\",\"monthPointText\":\"Brief_monthPointText__3zR8q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobileWrapper\":\"BasicField_mobileWrapper__PtzVn\",\"returnLink\":\"BasicField_returnLink__2XwaW\",\"returnLinkWrapper\":\"BasicField_returnLinkWrapper__GRpvc\",\"dataField\":\"BasicField_dataField__2MW7b\",\"btnWrapper\":\"BasicField_btnWrapper__FJVDz\",\"dataWrapper\":\"BasicField_dataWrapper__25oLu\",\"enterFormWrapper\":\"BasicField_enterFormWrapper__3EIcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"HomePage_inputForm__UN22K\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport sprite from \"../../assets/icons/sprite_categories.svg\";\r\n\r\nimport styles from \"./Brief.module.scss\";\r\n\r\nimport operation from \"../../redux/transactions/transactions.operations\";\r\n\r\nimport action from \"../../redux/transactions/transactions.actions\";\r\n\r\nimport {\r\n  getBrief,\r\n  getYear,\r\n} from \"../../redux/transactions/transactions.selectors\";\r\n\r\nconst Brief = () => {\r\n  const dispatch = useDispatch();\r\n  const { transType } = useParams();\r\n\r\n  const date = new Date();\r\n\r\n  const [monthsTotal, setMonthes] = useState([]);\r\n\r\n  const stateYear = useSelector(getYear);\r\n\r\n  const filter = {\r\n    type: transType,\r\n    year: stateYear,\r\n  };\r\n\r\n  const transactions = useSelector(getBrief)[filter.type];\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(action.changeActualYearForBrief(date.getFullYear()));\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    !transactions.length && stateYear && dispatch(operation.fetchBrief(filter));\r\n  }, [dispatch, stateYear, transType]);\r\n\r\n  useEffect(() => {\r\n    if (!transactions.length) {\r\n      const monthesSum = [];\r\n      setMonthes(monthesSum);\r\n      return;\r\n    }\r\n    const monthCuantity =\r\n      date.getFullYear() === stateYear ? date.getMonth() + 1 : 12;\r\n\r\n    const monthesSum = Array(monthCuantity)\r\n      .fill(\"\")\r\n      .map((_, idx) => ({\r\n        currentMonth: idx,\r\n        currentAmount: transactions.reduce((acc, { date, amount }) => {\r\n          const actualMonth = +date.split(\".\")[1];\r\n\r\n          if (actualMonth - 1 === idx) {\r\n            acc += amount;\r\n          }\r\n          return acc;\r\n        }, 0),\r\n      }));\r\n\r\n    monthesSum.forEach((data) => {\r\n      date.setMonth(data.currentMonth);\r\n      data.currentMonth = date.toLocaleDateString(\"ru\", { month: \"long\" });\r\n\r\n      let formatter = new Intl.NumberFormat(\"ru\", {\r\n        minimumFractionDigits: 2,\r\n      });\r\n      data.currentAmount = formatter.format(data.currentAmount);\r\n    });\r\n\r\n    setMonthes(monthesSum);\r\n  }, [transactions]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.titleBlock}>\r\n        <div className={styles.titleCont}>\r\n          <div className={styles.btnBlock}>\r\n            <button\r\n              className={styles.btn}\r\n              onClick={() => {\r\n                dispatch(action.changeActualYearForBrief(stateYear - 1));\r\n              }}\r\n            >\r\n              <svg width=\"10\" height=\"15\">\r\n                <use xlinkHref={`${sprite}#icon-arrow-left`} />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div>\r\n            Сводка\r\n            <p>{stateYear}</p>\r\n          </div>\r\n          <div className={styles.btnBlock}>\r\n            {stateYear < date.getFullYear() && (\r\n              <button\r\n                className={styles.btn}\r\n                onClick={() => {\r\n                  dispatch(action.changeActualYearForBrief(stateYear + 1));\r\n                }}\r\n              >\r\n                <svg width=\"10\" height=\"15\">\r\n                  <use xlinkHref={`${sprite}#icon-arrow-right`} />\r\n                </svg>\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ul>\r\n        {monthsTotal.length > 0 ? (\r\n          monthsTotal.map(({ currentMonth, currentAmount }) => (\r\n            <li key={currentMonth} className={styles.monthPoint}>\r\n              <p className={styles.monthPointText}>{currentMonth}</p>\r\n              <p className={styles.monthPointText}>{currentAmount}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <div className={styles.list}> </div>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Brief;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useMediaQuery(query) {\r\n  const [matches, setMatches] = useState(false);\r\n  useEffect(() => {\r\n    const media = window.matchMedia(query);\r\n    if (media.matches !== matches) {\r\n      setMatches(media.matches);\r\n    }\r\n    const listener = () => {\r\n      setMatches(media.matches);\r\n    };\r\n    media.addListener(listener);\r\n    return () => media.removeListener(listener);\r\n  }, [matches, query]);\r\n\r\n  return matches;\r\n}\r\n\r\n// после импорта в компоненте создается переменная следующего формата:\r\n//   let isPageWideMobile = useMediaQuery(\"(min-width: 320px)\");\r\n// имя переменной произвольное, медиа-правило выставляетя самостоятельно\r\n// Рендер компонента производится стандартно:\r\n//   {isPageWideMobile && <p>Width 320</p>}\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport Calendar from \"../enterForm/calendar/Calendar\";\r\nimport TableTransactions from \"../tableTransactions/TableTransactions\";\r\nimport Brief from \"../brief/Brief\";\r\n\r\nimport BasicFieldTab from \"./BasicFieldTab\";\r\nimport { useMediaQuery } from \"../../shared/hooks/mediaRulesHook\";\r\nimport EnterForm from \"../enterForm/enterForm/EnterForm\";\r\nimport setSelectedDate from \"../../redux/date/date.actions\";\r\nimport action from \"../../redux/transactions/transactions.actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport transactionsOperations from \"../../redux/transactions/transactions.operations\";\r\n\r\nimport { getSelectedDate } from \"../../redux/date/date.selectors\";\r\n\r\n\r\nimport styles from \"./BasicField.module.scss\";\r\n\r\nconst BasicField = () => {\r\n  const isPageWideLaptop = useMediaQuery(\"(min-width: 1280px)\");\r\n  const isPageWideMobile = useMediaQuery(\"(max-width: 767px)\");\r\n  const isPageWideTablet = !isPageWideLaptop && !isPageWideMobile;\r\n  const dispatch = useDispatch();\r\n    const refreshDate = new Date();\r\n  useEffect(() => {\r\n    dispatch(\r\n      setSelectedDate(\r\n        refreshDate.toISOString().slice(0, 10).split(\"-\").reverse().join(\".\")\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(action.changeActualYearForBrief(refreshDate.getFullYear()));\r\n  }, []);\r\n\r\n  const date = useSelector(getSelectedDate);\r\n  useEffect(() => {\r\n    dispatch(transactionsOperations.getAllIncomeOfDate(date));\r\n    dispatch(transactionsOperations.getAllExpenseOfDate(date));\r\n  }, [date]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className={styles.btnWrapper}>\r\n          <BasicFieldTab text={\"Расход\"} link={\"/expense\"} key=\"Расход\" />\r\n          <BasicFieldTab text={\"Доход\"} link={\"/income\"} key=\"Доход\" />\r\n        </div>\r\n\r\n        {isPageWideLaptop && (\r\n          <div className={styles.dataField}>\r\n            <div className={styles.enterFormWrapper}>\r\n              <Calendar />\r\n              <EnterForm />\r\n            </div>\r\n            <div className={styles.dataWrapper}>\r\n              <TableTransactions />\r\n              <Brief />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {isPageWideTablet && (\r\n          <>\r\n            <div className={styles.dataField}>\r\n              <div className={styles.enterFormWrapper}>\r\n                <Calendar />\r\n                <EnterForm />\r\n              </div>\r\n              <div className={styles.dataWrapper}>\r\n                <TableTransactions />\r\n              </div>\r\n            </div>\r\n            <Brief />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicField;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nimport Balance from \"../../client/balance/Balance\";\r\nimport BasicField from \"../../client/basicField/BasicField\";\r\nimport { setCurrentLocation } from \"../../redux/screenWidth/screenWidth.action\";\r\nimport { useMediaQuery } from \"../../shared/hooks/mediaRulesHook\";\r\n\r\nimport styles from \"./HomePage.module.scss\";\r\n\r\nconst HomePage = () => {\r\n  const isPageWideMobile = useMediaQuery(\"(max-width: 767px)\");\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    dispatch(setCurrentLocation(location));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!isPageWideMobile ? (\r\n        <div>\r\n          <div className={styles.inputForm}>\r\n            <Balance />\r\n            <BasicField />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className={styles.inputForm}>\r\n            <BasicField />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}